generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id            String    @id @default(cuid()) @map("_id")
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      accounts[]
  tests         tests[]
  rooms         rooms[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model accounts {
  id                String   @id @default(cuid()) @map("_id") // Add this line
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user users @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model verification_tokens {
  id        String   @id @default(cuid()) @map("_id")
  email     String
  token     String   @unique
  expiresAt DateTime

  @@unique([email, token])
}

model tests {
  id         String @id @default(cuid()) @map("_id")
  wpm        Int
  accuracy   Float
  time       Int
  mode       String
  modeOption Int

  userId String
  user   users   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model rooms {
  id         String @id @default(cuid()) @map("_id")
  code       String @unique
  name       String
  mode       String
  modeOption Int

  userId String
  user   users  @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}