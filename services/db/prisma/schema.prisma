generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  username      String    
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  tests         Test[]
  rooms         Room[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Session Session[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  name              String?
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  username  String   
  email     String
  password  String
  token     String   @unique
  expiresAt DateTime

  @@unique([email, token])
}

model Test {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  wpm        Int
  accuracy   Float
  time       Int
  mode       String
  modeOption Int
  userId     String @db.ObjectId

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  code       String @unique
  name       String
  mode       String
  modeOption Int

  userId    String @db.ObjectId
  user   User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}